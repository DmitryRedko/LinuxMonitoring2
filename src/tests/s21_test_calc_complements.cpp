#include "s21_test.h"


TEST(MatrixCalcComplementsTest, CalcComplements1) {
    
    S21Matrix matrix(7, 2);
    matrix.FillByMass(new double[14]{-2.4399602030010072, -1.4156845816984154, 3.1970555933304396, 1.863715767637986, 2.4615124917341635, -1.242978086211235, -3.872789069276327, -4.23861984892198, 3.526426618915142, 0.0504146679004247, -1.8138134637739456, 1.817921981847456, -3.310231796024017, -0.5346206814030472});

    S21Matrix expectedComplements(7, 2);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements2) {
    
    S21Matrix matrix(5, 5);
    matrix.FillByMass(new double[25]{0.667073569122838, -4.853704050498413, -3.851978932644985, 0.09052392097552353, -3.8547037631655834, -2.3377838529177266, 3.1849866829177547, 1.3527967621466495, 0.9381217302506197, -1.3012914209652902, 3.787774681284615, 1.172099380187868, 1.2825538939044767, 3.6213711394688595, -0.09917235711059735, -3.7044142127908986, -4.936090100108378, -3.698005459311199, -3.1185937109553996, 2.501438597566813, -3.305123558651122, -1.4280313450128599, -3.212284092095331, -0.2994743110832987, 4.8768042365526245});

    S21Matrix expectedComplements(5, 5);
    expectedComplements.FillByMass(new double[25]{35.073741650376995, 72.30614932693435, -189.7324008970748, 4.924578520718319, -79.7286649293447, -255.08720780988276, -149.82429164425992, 212.43936072868644, 238.36003335032862, -62.18216361882356, -152.5252549678894, -343.1122428993678, 359.80430042423654, 340.9910088512141, 54.09727640953466, -261.54187314709105, -465.29681345342453, 509.5632986317348, 244.70825184555693, 37.167633474259624, 90.70709314256025, 248.85925706441472, -347.3330612646198, -51.088195110493274, 48.230438092745416}); // Заполняем нулями, так как значения не важны в этом контексте

    S21Matrix result = matrix.CalcComplements();
    
    ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements3) {
    
    S21Matrix matrix(5, 7);
    matrix.FillByMass(new double[35]{-4.699514836948144, -4.042525647805658, 0.07367120314290876, 0.43042231130971853, 3.333516513172336, -0.4738438808705494, 0.1511532109763456, -4.730783465478132, -2.9734681462831114, -2.1565760020336033, -2.5375100391153516, 0.7264601733064593, 4.709604642045802, -3.2746485631790065, -2.626140433179284, -3.6990888841521006, -1.8422533054022816, -2.1359481902697364, 3.658829145265514, 4.007240581741518, -1.1797321306864248, -0.6149526667972953, -4.978458217065667, 1.0638536073664095, -2.5908158604566136, 2.0305803645589426, -1.9994125415371764, 4.991516731606325, 3.1909657638876823, 1.6172696742273587, 2.612347242029057, -3.0414215232620623, -1.3586085209125742, 4.253602889267302, 2.6069475452009456});

    S21Matrix expectedComplements(5, 7);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements4) {
    
    S21Matrix matrix(2, 6);
    matrix.FillByMass(new double[12]{-3.0962144623927057, -0.40023266679660097, -4.682829711230996, -4.547308867105071, -0.7345675733436359, 3.154435395512463, 4.137218871959288, -0.6309288173935865, 3.4388484475409555, 2.3122873624849793, -4.759955171230427, 1.5040826504213758});

    S21Matrix expectedComplements(2, 6);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements5) {
    
    S21Matrix matrix(8, 4);
    matrix.FillByMass(new double[32]{2.4033452467013907, -3.109168007624039, 3.101846850828231, 3.4321271183728026, 2.366291623368183, 1.3223081002681916, -3.580210713075881, 3.972925470052921, -0.10078026650624139, -2.0769715698441606, -1.157580727544004, 2.1573124373120267, -3.284508135376739, 4.590401739966762, -4.052450183456373, 2.4302959733759515, -1.8117279428201307, -4.701489657424968, -1.0201713566971984, -3.760069445323345, -1.052626251733686, 2.7336567568440353, 2.642923723896942, -4.667829355604814, -0.38135802385491857, -0.44614551833316174, 4.509381568239499, -3.4555448752095828, 4.817261288755926, 3.1006840061965484, 1.678609863212916, 0.7814172784918725});

    S21Matrix expectedComplements(8, 4);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements6) {
    
    S21Matrix matrix(7, 2);
    matrix.FillByMass(new double[14]{-4.634139789293188, 1.090913831278547, 4.85203989515157, 4.458086632546966, 3.838120191627443, 3.0886972915506643, 2.6922972995213446, 4.71161330646445, 4.769910017623602, -1.6219705730971712, 4.755440334808776, 2.1192583212272966, 2.9656731438891537, 0.04374017709834366});

    S21Matrix expectedComplements(7, 2);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements7) {
    
    S21Matrix matrix(6, 3);
    matrix.FillByMass(new double[18]{-0.7404793814221353, 0.6727703092280182, 4.083249603671016, 4.336167603009443, 4.016441861984841, 4.910780775329577, -2.738322831890825, -2.4538281577799905, 3.8393315317491457, 0.6633190581322506, 1.575257156234244, 1.0504319554540231, -2.212844490161655, -1.355868873057604, 0.8294778309064652, 2.527886666337209, 1.709757693233243, 2.7148646101089806});

    S21Matrix expectedComplements(6, 3);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements8) {
    
    S21Matrix matrix(5, 5);
    matrix.FillByMass(new double[25]{-4.595359419434387, -3.429736856764576, 2.258620298250894, -1.0909217871394916, -0.8421459832867395, -1.7350854318299094, -4.324292629434957, 0.6775748868109694, -4.609416938726108, 4.524999137600611, -2.0491748928440714, -1.762729727629273, 4.366136025574921, -1.680306000418894, -0.6437984857195307, -3.3014819748686133, -1.1765334232876623, -2.2038259328781717, 1.7834023361686029, -3.9505551799419, 1.9920414177147645, 1.0167062384098795, 1.1951397704373576, 4.927954958967897, -1.1649706570796106});

    S21Matrix expectedComplements(5, 5);
    expectedComplements.FillByMass(new double[25]{-483.68854315071957, 368.10577350994726, 47.71069797131444, 191.82771908021863, 354.5729969346245, 207.0326064111379, -269.35334060596676, -39.76309534563544, -39.37022163530303, -88.39092204000706, 320.1995606306139, -259.20941849997956, 66.62507196378266, -163.34198418699654, -301.29918875637776, 257.8571756053313, -300.48698536181394, -73.23446418773231, -87.45765139714602, -266.40808903741913, 102.43668841074158, -150.0925227897717, 22.58969051475317, 95.2542770917381, -10.507651277211822}); // Заполняем нулями, так как значения не важны в этом контексте

    S21Matrix result = matrix.CalcComplements();
    
    ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements9) {
    
    S21Matrix matrix(6, 6);
    matrix.FillByMass(new double[36]{-4.677220370935772, 2.2571437208983083, 0.7962039082390753, -1.0888718945642504, -0.4918168841618522, -4.307947238626789, -1.8556220014284444, -4.010017030413252, -0.8245387948461325, 0.8497152252569968, 4.559494606518706, -0.29270852329622166, -0.3716122911626858, 0.19480725707582458, 2.0363250398803387, -1.8679316708884883, -4.166738853919716, 0.44503113458543453, -1.9520148643061819, -0.08941067926317192, 1.1248612904134738, 1.4944708639701263, -0.860779388313464, -4.290047070283926, -4.765214295547311, -4.68204744880798, -1.1171947551885575, 0.1679830022006854, -4.850752508262097, -4.834527784729401, 4.745173546424091, 3.3342238711732257, -2.7446817823108627, 3.7032779691246756, 1.9562423817456747, 2.5330711267680304});

    S21Matrix expectedComplements(6, 6);
    expectedComplements.FillByMass(new double[36]{1281.4864523352899, -605.4640575803652, 53.75303474767037, -563.6123302187971, 54.76965196093301, -763.704379602627, 1846.7240983344602, -22.276772642038072, -862.2796492873525, -1839.0751685584592, 53.87809886868853, -1717.3721873414931, 2463.8609371374782, -351.8520370415146, -1521.6281561378942, -2601.9564076888046, 738.2145322808151, -2567.2544305929077, -491.4746837966943, 161.77249086180095, -918.5335203807142, -565.2530562161126, -79.95243717404601, 600.5991177429765, 136.4503223786237, 143.715139467252, 569.8055485071496, -43.99850409771003, 293.8161109952422, 10.042813838315784, 1387.9817228185689, -422.18959361152815, -209.02324327966673, -1755.2005182715172, 395.03404447980205, -1368.2525979628372}); // Заполняем нулями, так как значения не важны в этом контексте

    S21Matrix result = matrix.CalcComplements();
    
    ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements10) {
    
    S21Matrix matrix(2, 8);
    matrix.FillByMass(new double[16]{-0.5042058606952962, 0.6299767302459873, 4.921444999566763, -0.3178783553377649, 0.19446783875730045, 3.3809095807156435, -3.26825363998253, -2.8647629095196283, -1.0424281012023684, -2.739330367342051, 0.8240015364478186, -2.4436123848353866, 0.8438835381701129, -2.7643653415180216, -1.8477207540551777, 2.9367761579904483});

    S21Matrix expectedComplements(2, 8);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements11) {
    
    S21Matrix matrix(8, 8);
    matrix.FillByMass(new double[64]{-4.383917300891343, 4.123785514961497, 1.1729835884661455, -0.014765181764707869, 0.013008173932269607, 1.102511996506843, -1.2045014936089506, 0.006818573194991018, -2.194410118826399, -4.097146215893449, 4.716384091698879, 1.4880758612565508, -3.996170207589813, -0.4010660124061447, -1.1507577996052798, 3.406283303696485, 3.5661424196631852, 3.327991074951619, 3.2705884793600806, -3.1489719637543567, -0.8998609781301257, -1.6913011377665557, -0.23638076938634178, -4.049521408715153, 2.4545749148037164, 1.577737017913881, -3.4317229116981, -1.67468708733989, 3.205119910305145, 2.791935160042396, -3.138115697778736, -1.8455971395425177, -0.2549503567347342, 4.828392578957828, 2.4170894280883006, -1.5346196342877882, 1.9643476540185212, -3.001339141249748, 4.5478101710421335, -0.14367007028577294, -3.776004171467209, -4.382271604322585, -1.4945275036865988, 1.2465866035270299, 0.24572445446299795, 4.855026844581708, 2.4653349943467084, -2.2000785358275845, -3.6295029013201594, -2.7697395607030795, 1.821129755768255, 0.6399121929276275, -2.561032674586028, 4.945087544802387, -4.467665276466564, -0.7555695965721547, 1.9845837871094938, 3.4230622473935632, -0.11079140054431225, -0.1441862151596096, -1.9653547535792661, 1.5390502645833504, 4.795469213852874, 0.5900206874320837});

    S21Matrix expectedComplements(8, 8);
    expectedComplements.FillByMass(new double[64]{-46881.06248015086, -18223.405357244512, -57334.947168177874, -148705.6054763029, -51568.53300595733, -19132.20827276409, 7673.656490278258, 32069.91816812412, -45213.07742134667, -25543.973315191994, -55104.69693735829, -166069.5811613645, -50552.34836183036, -16411.560485059686, 10143.512098092919, 41320.074177282106, -21890.234094929612, -11443.547417785248, -27852.67601211948, -79692.71210413589, -28207.704233900076, -10553.063335748171, 4454.004221682108, 12682.708684391331, -27694.25812424223, -16066.776028665172, -35926.242627669635, -111348.0787616144, -28536.313593707488, -6890.04833555884, 5716.736782423545, 28862.868054033406, 33768.76005705901, 16248.747135815573, 49224.394386328844, 113671.70340226464, 45776.90194799378, 16884.64460217266, -4910.234753775921, -22483.041546761793, -30485.67988870582, -16854.539708818527, -36814.40166945786, -102059.65699524808, -31838.24967408978, -10675.220475177342, 8649.901534557292, 19960.518554722585, 64705.49806777687, 32898.22995908968, 85329.56299087316, 224531.92605853706, 73933.98109822517, 29836.77216058857, -14699.11616200582, -49697.601242117664, 2103.273249744266, 2119.6396329046584, -766.5934573820912, -145.04600781128016, -3312.7781776713196, 3499.9145246171315, 2037.5266536561035, 2243.288817930819}); // Заполняем нулями, так как значения не важны в этом контексте

    S21Matrix result = matrix.CalcComplements();
    
    ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements12) {
    
    S21Matrix matrix(3, 8);
    matrix.FillByMass(new double[24]{-0.9632248663910428, -1.0844388391570914, 1.096520979396728, -3.198756564585925, 3.4617231647246385, 2.3335108180198993, 1.1791136255159813, -0.07126549722819497, -3.0456941454476407, -0.857499824317415, 0.8064268186595971, 1.4867344422853188, 1.4082388794111242, -2.2259689812372407, -0.37824962698119435, 2.3458474043939335, 4.348863384108009, 3.950377456920343, 3.5083477506731384, -2.9454248000576766, 2.805247359244599, -4.009716164514416, 1.414946315131421, 0.26732474921932337});

    S21Matrix expectedComplements(3, 8);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements13) {
    
    S21Matrix matrix(5, 5);
    matrix.FillByMass(new double[25]{-2.3486600997135687, -3.8843790031680903, -3.3961293078982626, 3.9133018198665486, -4.643238390970944, -1.8145284170856515, 1.468247380759303, -0.255833914880224, 0.7246337324228733, 2.4988518395845976, -2.012175813005579, 0.8052366916586342, -1.8024730625079624, 3.4480302592279948, -3.9266361875207867, 4.720109988754032, -2.9551337960791493, 1.8550918527233389, -4.850500182710828, -3.3302729677205556, 2.994741856423757, 1.0842544231297433, -0.9716882594179177, -3.880804163079951, -2.222059060385498});

    S21Matrix expectedComplements(5, 5);
    expectedComplements.FillByMass(new double[25]{33.15415598051234, 49.082925262869296, 57.03411283946492, 29.260563126849377, -7.410863139098429, 498.7701228012291, 20.067619115804824, -110.62092118368429, 354.747402969558, 110.81164526106421, 116.86794390043266, -52.70792104693198, -94.48941013362862, 45.96532543713056, 92.82937369826023, 219.81054322076426, 27.056094856161145, -118.57877347392463, 157.72336358147624, 85.83914090591708, -44.335913712773106, -27.40569241540344, 101.11204976132676, 20.182391593401157, -11.592279694673968}); // Заполняем нулями, так как значения не важны в этом контексте

    S21Matrix result = matrix.CalcComplements();
    
    ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements14) {
    
    S21Matrix matrix(8, 8);
    matrix.FillByMass(new double[64]{-3.1520108913566847, -0.18414895739183734, -0.010279077783917678, -1.3032065122388548, 3.090026959743268, 2.0272921041305203, -2.0224733954142993, 0.3504290596700006, 1.6891607867644005, -4.947811554030577, -0.2743214133726992, -3.9709221594213897, -1.6620374844343422, 1.0099576314495673, -2.2963659227814306, 1.2402192553226676, 3.7301381380338334, -3.6672736847772693, -3.026179734075506, -4.856741903997391, 4.910663646791079, -3.7950267306268093, -1.4894427100629724, 2.701940474884891, 0.2651681940097417, 3.3928163691427766, -2.2148722462199046, 3.0851487577724903, -4.1587817159112, -2.571461328664869, 0.266242084151993, -2.6205698750196706, -0.3202686699493409, -2.2306881996225902, -4.400352991598114, -3.1806012184664767, 0.8098880345244863, -1.7750570307817357, -2.696441010759872, -2.1967282272883883, 1.0731192038523982, -0.27492245450412867, -1.0999260440160654, 4.6783947504354515, 3.7325583892420084, 3.2329481893829524, 2.3353818985584285, 0.408885363517312, 2.3534803658809285, 2.686219962702036, -4.577381100123352, -3.834791156166143, 3.4607943800296948, 3.9239632284263664, -4.930727811070209, 1.5706355742552125, 3.913121555676886, 3.727311457720754, 0.42447792403754114, -4.140184707176436, 2.008604895027095, 2.114014876588163, 4.109316932724523, -4.157804290501479});

    S21Matrix expectedComplements(8, 8);
    expectedComplements.FillByMass(new double[64]{298583.27798623225, -45319.77274963257, 409510.3189422851, 217853.80351564972, 191871.8534263577, -95691.78078996202, -493939.6603518746, -378879.9921178604, 177479.65135927152, -30596.991651248278, 235213.55490031443, 125546.62745572644, 105250.1508076051, -51557.03561617631, -284554.01010301855, -217999.0337443866, 114819.24699672287, -16671.636533304558, 151941.9010577716, 81158.61686928567, 72907.64183209007, -39836.9412512722, -182952.75062101855, -138038.83713895525, 275469.6664922574, -39669.19393144333, 366347.93540823914, 199456.59465935675, 168694.20729468443, -88209.00552718288, -445964.11641451844, -341631.4521208388, -175236.59151196716, 22748.885355208997, -236468.66838506496, -124853.22070083389, -106822.73183035411, 54630.677531148096, 280452.33449399314, 209005.19413219503, 51587.79222649688, -10703.323150709663, 64215.31733871569, 39938.64600396548, 32758.78089016628, -12848.80785437879, -79287.61280681037, -63327.11662811084, -59408.29886869413, 12183.004593879563, -83808.50901934489, -44418.82138639324, -38621.56032961076, 21431.016979784716, 96580.35247218252, 78376.59240564196, 54313.540625041045, -7247.264843037775, 72105.31336524163, 35950.84984304003, 33691.48172554734, -15767.09943252214, -83806.74715849555, -69015.77761250656}); // Заполняем нулями, так как значения не важны в этом контексте

    S21Matrix result = matrix.CalcComplements();
    
    ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements15) {
    
    S21Matrix matrix(7, 5);
    matrix.FillByMass(new double[35]{-2.1545371608118224, 3.3134105482325626, 1.67890867898394, 3.688825501730964, -1.9662152085814464, -3.975273498381645, -3.5516555030989263, 4.0933219724735785, 0.8780443178523258, -3.369473168955577, 2.6394702930378156, 1.2741280344073322, -2.927427322727355, -3.4508835554043804, 4.473851047417941, 2.7158309482308196, -4.4219087656067995, 0.2203567206805932, -1.6948013585408725, 4.470761511519957, -1.9332042139531627, -0.34334529042925865, -4.037116422062751, -3.404893423836206, 3.6215353747415, -2.8936602712077644, -2.782525964012085, 3.9082952169129044, -4.371948849581387, -0.38327200258848837, 4.157554507844429, 1.6225918104980757, -0.6370235868521839, -0.11571199425040124, 3.505808322000931});

    S21Matrix expectedComplements(7, 5);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements16) {
    
    S21Matrix matrix(2, 5);
    matrix.FillByMass(new double[10]{0.4896910591957333, -1.7027713082298157, 0.15944184579926812, 3.054018104140715, -3.1664250655017687, 3.170524051436349, -0.5206174220007291, -1.1489290418953555, -4.682507718482136, 2.988166853562867});

    S21Matrix expectedComplements(2, 5);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements17) {
    
    S21Matrix matrix(5, 4);
    matrix.FillByMass(new double[20]{2.275442847071271, -0.820594046231883, 0.6774892338801504, -4.721302773870248, 2.212591182425885, 0.5748843857582777, 3.487749920933606, -4.911551809204328, 2.5684472996619494, 1.4735912915042695, 3.8302346759079224, 1.803584623682605, 2.8287377339842195, 0.1987901060082633, -4.224163129170629, 0.5352754053860478, 3.6820751079385747, 2.0753914671723734, 3.4142276769159032, 0.26655963169894026});

    S21Matrix expectedComplements(5, 4);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}

TEST(MatrixCalcComplementsTest, CalcComplements18) {
    
    S21Matrix matrix(2, 2);
    matrix.FillByMass(new double[4]{4.769944407562674, -4.8418229686294945, -2.958532964954308, -2.982073851057664});

    S21Matrix expectedComplements(2, 2);
    expectedComplements.FillByMass(new double[4]{-2.9820738510576645, 2.9585329649543075, 4.841822968629495, 4.769944407562674}); // Заполняем нулями, так как значения не важны в этом контексте

    S21Matrix result = matrix.CalcComplements();
    
    ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements19) {
    
    S21Matrix matrix(4, 4);
    matrix.FillByMass(new double[16]{-4.498772990707691, -1.2174450218794663, 3.278603919679183, -1.9790653018957904, 2.3883327256910896, -4.0475499323653885, -2.7584370955687367, 3.667535504513408, 0.023297350737734313, 0.04988671150300661, 3.2934022389388993, -4.60643625437135, 2.6178590482911224, -4.253803126665279, -0.8320241353086058, -4.375438230856612});

    S21Matrix expectedComplements(4, 4);
    expectedComplements.FillByMass(new double[16]{70.41314692508563, 42.27827811503357, 0.23399568424793254, 0.9812804746282022, -59.525466450015614, 59.96868160224584, -104.1465180092706, -74.11185178495838, -111.06441763978802, 12.644199581315597, -175.13243503125886, -45.44059430462692, 35.1844031064152, 17.831607308413457, 96.97594399620205, 69.7046560461353}); // Заполняем нулями, так как значения не важны в этом контексте

    S21Matrix result = matrix.CalcComplements();
    
    ASSERT_TRUE(result == expectedComplements);
}

TEST(MatrixCalcComplementsTest, CalcComplements20) {
    
    S21Matrix matrix(4, 5);
    matrix.FillByMass(new double[20]{1.7002885107765744, -2.421589359547467, -2.5334773841863036, 2.426619616408371, -3.61919560032137, -0.9899430468583255, 4.31095005204959, -1.550492724281666, 3.8865718193075054, -1.5751332998183032, 0.7259771034936406, -2.0904244581967624, 3.2953606356669685, 0.8700543774764693, -3.276838200841772, -0.8764184925991003, -2.781826557154216, 1.1633260031344914, -1.2198132320495803, -1.8545665996879537});

    S21Matrix expectedComplements(4, 5);

    EXPECT_THROW(matrix.CalcComplements(), std::invalid_argument);
    
}
